<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2" />
  </system.web>
    
  <system.serviceModel>
    <services>
      <service name="WcfService1.Service1">
        <endpoint address="mex" name="meta" binding="mexTcpBinding" contract="IMetadataExchange" />

        <endpoint address =""           name="httpEndpoint"       binding="basicHttpBinding" bindingConfiguration="BasicHttp"   contract="WcfService1.IService1" />
        <endpoint address ="httpCert"   name="httpCertEndpoint"   binding="basicHttpsBinding" bindingConfiguration="CertHttps"    contract="WcfService1.IService1" />
        <endpoint address ="httpWind"   name="httpWindEndpoint"   binding="basicHttpsBinding" bindingConfiguration="WindHttps"    contract="WcfService1.IService1" />
        
        <endpoint address =""           name="netTcpEndPoint"     binding="netTcpBinding"   bindingConfiguration="BasicNetTcp"  contract="WcfService1.IService1" />
        <endpoint address ="netTcpCert" name="netTcpCertEndPoint" binding="netTcpBinding"   bindingConfiguration="CertNetTcp"   contract="WcfService1.IService1" />
        <endpoint address ="netTcpWind" name="netTcpWindEndPoint" binding="netTcpBinding"   bindingConfiguration="WindNetTcp"   contract="WcfService1.IService1" />
        <endpoint address ="websocket"  name="nethttpEndpoint"    binding="netHttpBinding"  bindingConfiguration="HelloNetHttp" contract="WcfService1.IService1" />
      </service>

      <service name="WcfService1.DuplexService">
        <endpoint address="mex" binding="mexTcpBinding" contract="IMetadataExchange" />

        <endpoint address =""           name="netTcpDupEndPoint"      binding="netTcpBinding" bindingConfiguration="BasicNetTcp"  contract="WcfService1.IDuplexService" />
        <endpoint address ="netTcpCert" name="netTcpCertDupEndPoint"  binding="netTcpBinding" bindingConfiguration="CertNetTcp"   contract="WcfService1.IDuplexService" />
        <endpoint address ="netTcpWind" name="netTcpWindDupEndPoint"  binding="netTcpBinding" bindingConfiguration="WindNetTcp"   contract="WcfService1.IDuplexService" />
        <endpoint address ="websocket"  name="WebsocketEndpoint"      binding="netHttpBinding" bindingConfiguration="DuplexNetHttp" contract="WcfService1.IDuplexService" />
      </service>

      <service name="WcfService1.StreamingService">
        <endpoint address="mex" binding="mexTcpBinding" contract="IMetadataExchange" />

        <endpoint address =""           name="HttpStreamingEndpoint"    binding="basicHttpBinding" bindingConfiguration="StreamingHttp" contract="WcfService1.IStreamingService" />
        <endpoint address ="httpCert"   name="HttpCertStreamingEndpoint" binding="basicHttpsBinding" bindingConfiguration="CertStreamingHttps" contract="WcfService1.IStreamingService" />
        <endpoint address ="httpWind"   name="HttpWindStreamingEndpoint" binding="basicHttpsBinding" bindingConfiguration="WindStreamingHttps" contract="WcfService1.IStreamingService" />
        
        <endpoint address =""           name="NetTcpStreamingEndpoint"  binding="netTcpBinding" bindingConfiguration="StreamingNetTcp" contract="WcfService1.IStreamingService" />
        <endpoint address ="netTcpCert" name="NetTcpCertStrEndpoint"    binding="netTcpBinding" bindingConfiguration="CertStreamingNetTcp" contract="WcfService1.IStreamingService" />
        <endpoint address ="netTcpWind" name="NetTcpWindStrEndpoint"    binding="netTcpBinding" bindingConfiguration="WindStreamingNetTcp" contract="WcfService1.IStreamingService" />

        <endpoint address ="websocket" name="StreamingNetHttpEndpoint"  binding="netHttpBinding" bindingConfiguration="StreamingNetHttp" contract="WcfService1.IStreamingService" />
      </service>
      <service name ="WcfService1.DuplexStreamingService">
        <endpoint name ="DuplexStreamingNetHttpEndpoint" binding ="netHttpBinding" bindingConfiguration ="DuplexStreamingNetHttp" contract ="WcfService1.IDuplexStreamingService" />
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="BasicNetTcp" portSharingEnabled="true" sendTimeout="00:01:00">
          <security mode="None"/>
        </binding>
        <binding name="CertNetTcp" portSharingEnabled="true" sendTimeout="00:01:00">
          <security mode="Transport">
            <transport clientCredentialType="Certificate">
            </transport>
          </security>
        </binding>
        <binding name="WindNetTcp" portSharingEnabled="true" sendTimeout="00:01:00">
          <security mode="Transport">
            <transport clientCredentialType="Windows"> </transport>
          </security>
        </binding>
        
        <binding name ="StreamingNetTcp" maxReceivedMessageSize ="1671088640" transferMode="Streamed">
          <security mode ="None" />
        </binding>
        <binding name ="CertStreamingNetTcp" maxReceivedMessageSize ="1671088640" transferMode="Streamed">
          <security mode="Transport">
            <transport clientCredentialType="Certificate"></transport>
          </security>
        </binding>
        <binding name ="WindStreamingNetTcp" maxReceivedMessageSize ="1671088640" transferMode="Streamed">
          <security mode="Transport">
            <transport clientCredentialType="Windows"></transport>
          </security>
        </binding>
      </netTcpBinding>
        
      <basicHttpBinding>
        <binding name="BasicHttp">
          <security mode="None" />
        </binding>

        <binding name="StreamingHttp" maxReceivedMessageSize="1671088640" transferMode="Streamed">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
      
      <basicHttpsBinding>
        <binding name ="CertHttps">
          <security mode ="Transport">
            <transport clientCredentialType="Certificate">
            </transport>
          </security>
        </binding>
        <binding name ="WindHttps">
          <security mode ="Transport">
            <transport clientCredentialType="Windows">
            </transport>
          </security>
        </binding>
      
        <binding name="CertStreamingHttps" maxReceivedMessageSize="1671088640" transferMode="Streamed">
          <security mode ="Transport">
            <transport clientCredentialType="Certificate"></transport>
          </security>
        </binding>
        <binding name="WindStreamingHttps" maxReceivedMessageSize="1671088640" transferMode="Streamed">
          <security mode ="Transport">
            <transport clientCredentialType="Windows">
            </transport>
          </security>
        </binding>
      </basicHttpsBinding>

      <netHttpBinding>
        <binding name="HelloNetHttp">
          <webSocketSettings transportUsage="Always" />
        </binding>
        <binding name="DuplexNetHttp">
          <webSocketSettings transportUsage="Always" /> 
        </binding>
        <binding name="StreamingNetHttp"  maxReceivedMessageSize="1671088640" transferMode="Streamed">
                    <webSocketSettings transportUsage="Always" /> 
        </binding>
        <binding name="DuplexStreamingNetHttp"  maxReceivedMessageSize="1671088640" transferMode="Streamed">
                    <webSocketSettings transportUsage="Always" /> 
        </binding>
      </netHttpBinding>
    </bindings>
    
    
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- -->
          <serviceCredentials>
            <clientCertificate>
              <authentication certificateValidationMode="ChainTrust" revocationMode="NoCheck"/>
            </clientCertificate>
            <serviceCertificate findValue ="CertThumbprintHere" x509FindType="FindByThumbprint" storeName="My" storeLocation="LocalMachine" />
          </serviceCredentials>
          <!-- -->
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>

    <modules runAllManagedModulesForAllRequests="true" />
    <directoryBrowse enabled="true" />
        <urlCompression doStaticCompression="true" doDynamicCompression="true" />
  </system.webServer>

</configuration>
